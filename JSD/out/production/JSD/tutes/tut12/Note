NOTE:

Common lambda: used if it is an interface with one default method,
               used when no method references available
  +  filter(predicate): receive 1 input, return boolean
  +  map(function): receive 1 input of Integer, return 1 output of any type
  +  reduce(): receive 2 inputs, return 1 output in the same type
  +  sorted(comparator): receive 2 inputs, return int output or comparator
  +  allMatch(predicate):  receive 1 input, return boolean, take true if all true
  +  forEach(consumer): receive 1 input, normally return void
  +  get()
  +  ifPresent(consumer)
        
FIs: Predicate, Function, Consumer, Comparator
E.g.
  +   Predicate: Character.isDigit()          (1 -> boolean)
  +   Function: Integer.parseInt()            (1 -> 1)
  +   Consumer: System.out.println()          (1 -> void)
  +   Comparator: Integer.compareTo()         (2 -> comparable)